{{- if .Values.service.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 3 }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount | default 1 }}
  {{- end }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if or .Values.application.env .Values.podAnnotations }}
      annotations:
      {{- if .Values.application.env }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.autoMountServiceAccountToken }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: {{ include "fullname" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.imagepullPolicy | default "IfNotPresent" | quote }}
          {{- with .Values.containers.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycle }}
          lifecycle:
            {{- toYaml .Values.lifecycle | nindent 12 }}
          {{- end }}
          {{- if or .Values.application.secret .Values.application.env }}
          envFrom:
          {{- if .Values.application.secret }}
          - secretRef:
              name: {{ .Values.application.secret }}
          {{- end }}
          {{- if .Values.application.env }}
          - configMapRef:
              name: {{ include "fullname" . }}
          {{- end }}
          {{- end }}
          ports:
          - name: {{ .Values.service.name | default "web" | quote }}
            containerPort: {{ .Values.service.containerPort }}
          {{- if .Values.grpcService.enabled }}
          - name: {{ .Values.grpcService.name | default "grpc" | quote }}
            containerPort: {{ .Values.grpcService.containerPort }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
          {{- if eq .Values.startupProbe.type "tcpSocket" }}
            tcpSocket:
              port: {{ .Values.service.containerPort }}
          {{- else if eq .Values.startupProbe.type "exec" }}
            exec:
              command:
              {{ toYaml .Values.startupProbe.command | nindent 14 }}
          {{- else if .Values.startupProbe }}
            httpGet:
              path: {{ .Values.startupProbe.path }}
              scheme: HTTP
              port: {{ default .Values.service.containerPort .Values.startupProbe.port }}
          {{- end }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- if eq .Values.livenessProbe.type "exec" }}
            exec:
              command:
              {{ toYaml .Values.livenessProbe.command | nindent 14 }}
            {{- else }}
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              scheme: HTTP
              port: {{ default .Values.service.containerPort .Values.livenessProbe.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- if eq .Values.readinessProbe.type "exec" }}
            exec:
              command:
              {{ toYaml .Values.readinessProbe.command | nindent 14 }}
            {{- else }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              scheme: HTTP
              port: {{ default .Values.service.containerPort .Values.readinessProbe.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.extraContainer }}
      {{- range $extraContainer := .Values.extraContainer }}
        - name: {{ $extraContainer.name | default "container" }}
          securityContext:
             {{- toYaml $extraContainer.podSecurityContext | nindent 12 }}
          image: "{{ $extraContainer.image.repository }}:{{ $extraContainer.image.tag }}"
          imagePullPolicy: {{ $extraContainer.imagepullPolicy | default "IfNotPresent" | quote }}
          {{- with $extraContainer.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $extraContainer.lifecycle }}
          lifecycle:
            {{- toYaml $extraContainer.lifecycle | nindent 12 }}
          {{- end }}
          envFrom:
          {{- if or $extraContainer.secret $.Values.application.secret }}
          {{- if and $extraContainer.useAppSecret $.Values.application.secret }}
          - secretRef:
            name: {{ $.Values.application.secret }}
          {{- end }}
          {{- if $extraContainer.secret }}
          - secretRef:
            name: {{ $extraContainer.secret }}
          {{- end }}
          {{- end }}
          {{- if and $extraContainer.useAppEnv $.Values.application.env }}
          - configMapRef:
              name: {{ include "fullname" $ }}
          {{- end }}
          {{- if $extraContainer.env }}
          - configMapRef:
              name: {{ nospace (cat (include "fullname" $) "-" $extraContainer.name) }}
          {{- end }}
          {{- if $extraContainer.service }}
          {{- if $extraContainer.service.containerPort }}
          ports:
          - name: {{ default $extraContainer.name $extraContainer.service.name | quote }}
            containerPort: {{ $extraContainer.service.containerPort }}
          {{- end }}
          {{- end }}
          {{- if $extraContainer.startupProbe }}
          startupProbe:
          {{- if eq $extraContainer.startupProbe.type "tcpSocket" }}
            tcpSocket:
              port: {{ $extraContainer.service.containerPort $extraContainer.startupProbe.port }}
          {{- else if eq $extraContainer.startupProbe.type "exec" }}
            exec:
              command:
              {{ toYaml $extraContainer.startupProbe.command | nindent 14 }}
          {{- else if $extraContainer.startupProbe }}
            httpGet:
              path: {{ $extraContainer.startupProbe.path }}
              scheme: HTTP
              port: {{ default $extraContainer.service.containerPort $extraContainer.startupProbe.port }}
          {{- end }}
            initialDelaySeconds: {{ $extraContainer.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ $extraContainer.startupProbe.periodSeconds }}
            timeoutSeconds: {{ $extraContainer.startupProbe.timeoutSeconds }}
            successThreshold: {{ $extraContainer.startupProbe.successThreshold }}
            failureThreshold: {{ $extraContainer.startupProbe.failureThreshold }}
          {{- end }}
          {{- if $extraContainer.livenessProbe }}
          livenessProbe:
            {{- if $extraContainer.livenessProbe.type }}
            {{- if eq $extraContainer.livenessProbe.type "exec" }}
            exec:
              command:
              {{ toYaml $extraContainer.livenessProbe.command | nindent 14 }}
            {{- end }}
            {{- else }}
            httpGet:
              path: {{ $extraContainer.livenessProbe.path }}
              scheme: HTTP
              port: {{ default $extraContainer.service.containerPort $extraContainer.livenessProbe.port }}
            {{- end }}
            initialDelaySeconds: {{ $extraContainer.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $extraContainer.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ $extraContainer.livenessProbe.timeoutSeconds }}
            successThreshold: {{ $extraContainer.livenessProbe.successThreshold }}
            failureThreshold: {{ $extraContainer.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if $extraContainer.readinessProbe }}
          readinessProbe:
            {{- if $extraContainer.readinessProbe.type }}
            {{- if eq $extraContainer.readinessProbe.type "exec" }}
            exec:
              command:
              {{ toYaml $extraContainer.readinessProbe.command | nindent 14 }}
            {{- end }}
            {{- else }}
            httpGet:
              path: {{ $extraContainer.readinessProbe.path }}
              scheme: HTTP
              port: {{ default $extraContainer.service.containerPort $extraContainer.readinessProbe.port }}
            {{- end }}
            initialDelaySeconds: {{ $extraContainer.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $extraContainer.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ $extraContainer.readinessProbe.timeoutSeconds }}
            successThreshold: {{ $extraContainer.readinessProbe.successThreshold }}
            failureThreshold: {{ $extraContainer.readinessProbe.failureThreshold }}
          {{- end }}
          {{- with $extraContainer.volumeMounts }}
          volumeMounts:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml $extraContainer.resources | nindent 12 }}
      {{- end }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{- if not .Values.affinity }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: {{ .Values.podAntiAffinityTopologyKey | default ("kubernetes.io/hostname") | quote }}
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - "{{ include "fullname" . }}"
      {{- end }}
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
